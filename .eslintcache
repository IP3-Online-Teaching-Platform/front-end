[{"/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/index.js":"1","/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/App/App.js":"2","/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/Providers/UserProvider.jsx":"3","/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/Components/Application.js":"4","/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/Components/Firebase.js":"5","/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/Components/Home/Home.js":"6","/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/Components/Login/Login.js":"7","/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/Components/Login/PasswordReset.js":"8","/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/Components/Login/ProfilePage.js":"9","/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/Components/Login/SignUp.js":"10","/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/index.js":"11","/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/App/App.js":"12","/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Application.js":"13","/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Providers/UserProvider.jsx":"14","/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Login/Login.js":"15","/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Home/Home.js":"16","/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Login/PasswordReset.js":"17","/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Dashboard/Dashboard.js":"18","/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Auth/Firebase-Auth.js":"19","/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Auth/API.js":"20","/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Login/StudentSignUp.js":"21","/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Login/TutorSignUp.js":"22","/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/TextChat/TextChat.js":"23","/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Payment/MakePayment.js":"24","/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Payment/StripeContainer.js":"25","/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Payment/PaymentForm.js":"26"},{"size":222,"mtime":1612752106630,"results":"27","hashOfConfig":"28"},{"size":251,"mtime":1612753923174,"results":"29","hashOfConfig":"28"},{"size":754,"mtime":1612754356785,"results":"30","hashOfConfig":"28"},{"size":1387,"mtime":1612757296080,"results":"31","hashOfConfig":"28"},{"size":1519,"mtime":1612753968769,"results":"32","hashOfConfig":"28"},{"size":165,"mtime":1612757389944,"results":"33","hashOfConfig":"28"},{"size":2008,"mtime":1612756710053,"results":"34","hashOfConfig":"28"},{"size":1816,"mtime":1612756912705,"results":"35","hashOfConfig":"28"},{"size":449,"mtime":1612756870356,"results":"36","hashOfConfig":"28"},{"size":2686,"mtime":1612756899768,"results":"37","hashOfConfig":"28"},{"size":209,"mtime":1619036189013,"results":"38","hashOfConfig":"39"},{"size":263,"mtime":1619036189153,"results":"40","hashOfConfig":"39"},{"size":1894,"mtime":1619036673549,"results":"41","hashOfConfig":"39"},{"size":754,"mtime":1619036189040,"results":"42","hashOfConfig":"39"},{"size":3292,"mtime":1619036189104,"results":"43","hashOfConfig":"39"},{"size":2026,"mtime":1619036189107,"results":"44","hashOfConfig":"39"},{"size":1816,"mtime":1619036189099,"results":"45","hashOfConfig":"39"},{"size":3422,"mtime":1619036189108,"results":"46","hashOfConfig":"39"},{"size":717,"mtime":1619036189125,"results":"47","hashOfConfig":"39"},{"size":5493,"mtime":1619036189128,"results":"48","hashOfConfig":"39"},{"size":5178,"mtime":1619036189096,"results":"49","hashOfConfig":"39"},{"size":5952,"mtime":1619036189094,"results":"50","hashOfConfig":"39"},{"size":8475,"mtime":1619036189072,"results":"51","hashOfConfig":"39"},{"size":724,"mtime":1619333617179,"results":"52","hashOfConfig":"39"},{"size":520,"mtime":1619334732854,"results":"53","hashOfConfig":"39"},{"size":2137,"mtime":1619334726821,"results":"54","hashOfConfig":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1ley7re",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"1xji7ow",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"79"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/index.js",[],["111","112"],"/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/App/App.js",[],"/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/Providers/UserProvider.jsx",[],"/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/Components/Application.js",[],"/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/Components/Firebase.js",[],"/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/Components/Home/Home.js",[],"/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/Components/Login/Login.js",["113"],"import React, { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../Firebase'\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const signInWithEmailAndPasswordHandler = (event, email, password) => {\r\n    event.preventDefault();\r\n    auth.signInWithEmailAndPassword(email, password).catch(error => {\r\n      setError(\"Error signing in with password and email!\");\r\n    });\r\n  };\r\n\r\n  const onChangeHandler = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === 'userEmail') {\r\n      setEmail(value);\r\n    }\r\n    else if (name === 'userPassword') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Log In</h1>\r\n      <div>\r\n        <form className=\"\">\r\n          <label htmlFor=\"userEmail\">\r\n            Email:\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"userEmail\"\r\n            value={email}\r\n            placeholder=\"student123@gmail.com\"\r\n            id=\"userEmail\"\r\n            onChange={(event) => onChangeHandler(event)}\r\n          />\r\n          <label htmlFor=\"userPassword\">\r\n            Password:\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"userPassword\"\r\n            value={password}\r\n            placeholder=\"Your Password\"\r\n            id=\"userPassword\"\r\n            onChange={(event) => onChangeHandler(event)}\r\n          />\r\n          <button onClick={(event) => { signInWithEmailAndPasswordHandler(event, email, password) }}>\r\n            Sign in\r\n          </button>\r\n        </form>\r\n        <p>\r\n          Don't have an account?{\" \"}\r\n          <Link to=\"/signup\">\r\n            Sign up here\r\n          </Link>{\" \"}\r\n          <br />{\" \"}\r\n          <Link to=\"/passwordreset\">\r\n            Forgot Password?\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;","/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/Components/Login/PasswordReset.js",[],"/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/Components/Login/ProfilePage.js",[],"/mnt/c/Users/choco/Desktop/ip3-private/firebase-version/e-learn/src/Components/Login/SignUp.js",[],"/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/index.js",[],["114","115"],"/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/App/App.js",[],"/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Application.js",[],"/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Providers/UserProvider.jsx",[],"/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Login/Login.js",[],"/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Home/Home.js",[],"/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Login/PasswordReset.js",[],"/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Dashboard/Dashboard.js",[],"/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Auth/Firebase-Auth.js",[],"/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Auth/API.js",[],"/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Login/StudentSignUp.js",[],"/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Login/TutorSignUp.js",[],"/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/TextChat/TextChat.js",["116"],"import React, { useState } from \"react\";\r\nimport { auth, db } from '../Auth/Firebase-Auth';\r\nimport moment from 'moment';\r\n\r\nconst TextChat = () => {\r\n    const [chatsMap, setChatsMap] = useState(undefined);\r\n    const [messages, setMessages] = useState([]);\r\n    const [msgcontent, setMsgContent] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [userToMessage, setUserToMessage] = useState('');\r\n    const [conversationNames, setConvoNames] = useState([]);\r\n\r\n    const handleSendMessage = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!userToMessage) {\r\n            return console.log('No user to message found');\r\n        }\r\n\r\n        let sortedUsers = [auth.currentUser.uid, userToMessage].sort()\r\n        let docname = sortedUsers.join('|');\r\n\r\n        const docRef = db.collection('conversations').doc(docname);\r\n        const doc = await docRef.get();\r\n        const docData = doc.data();\r\n\r\n        db.collection('conversations').doc(docname).set(\r\n            {\r\n                recentMessage: {\r\n                    timestamp: moment().unix() * 1000,\r\n                    content: msgcontent,\r\n                    author: auth.currentUser.uid\r\n                },\r\n                users: sortedUsers,\r\n                created: docData.created\r\n            }\r\n        )\r\n\r\n        db.collection('conversations').doc(docname).collection('messages').add(\r\n            {\r\n                timestamp: moment().unix() * 1000,\r\n                content: msgcontent,\r\n                author: auth.currentUser.uid\r\n            }\r\n        )\r\n\r\n        setMsgContent('');\r\n    }\r\n\r\n    const getConversations = () => {\r\n        return new Promise(async (resolve, reject) => {\r\n            const convosRef = db.collection('conversations');\r\n            const chats = await convosRef.where('users', 'array-contains', auth.currentUser.uid).get();\r\n\r\n            let allChats = []\r\n            let allConvoNames = []\r\n            chats.forEach(chat => {\r\n                let chatdata = chat.data();\r\n                allChats.push(chatdata);\r\n                allConvoNames.push(`${chatdata.users[0]}|${chatdata.users[1]}`);\r\n            })\r\n\r\n            const chatsMap = (\r\n                <div>\r\n                    {allChats.map(chat => (\r\n                        <div className=\"chat-contact\" onClick={() => { getRealTimeMessages(chat.users[0] === auth.currentUser.uid ? chat.users[1] : chat.users[0]) }}>\r\n                            <div className='chat-contact-name'>{chat.users[0] === auth.currentUser.uid ? chat.users[1] : chat.users[0]}</div>\r\n                            <div className='chat-contact-preview'>{chat.recentMessage.content.substring(0, 15) + \"...\"}</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )\r\n            setChatsMap(chatsMap);\r\n            setConvoNames(allConvoNames);\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    const getRealTimeMessages = (uid) => {\r\n        let userToMessage = uid\r\n        setUserToMessage(userToMessage);\r\n        const messageContainer = document.getElementById('chat-message-container');\r\n        db.collection('conversations').doc([auth.currentUser.uid, userToMessage].sort().join('|')).collection('messages')\r\n            .onSnapshot(snapshot => {\r\n                let messages = snapshot.docs.map(doc => doc.data());\r\n                messages.sort((a, b) => {\r\n                    return a.timestamp - b.timestamp;\r\n                });\r\n                const messageDisplay = (\r\n                    <>\r\n                        <div className=\"chat-title\">\r\n                            <div className=\"chat-title-name\">{userToMessage}</div>\r\n                        </div>\r\n                        <div className=\"main-chat\" id=\"chat-message-container\">\r\n                            {messages.map(message => (\r\n                                <div className={message.author === auth.currentUser.uid ? 'message-one' : 'message-two'}>\r\n                                    <div className={message.author === auth.currentUser.uid ? 'chat-name-picture' : 'chat-name-picture2'}>\r\n                                        <div className=\"chat-name\">{message.author === auth.currentUser.uid ? 'You' : userToMessage}</div>\r\n                                        <div className=\"chat-timestamp\">{moment(message.timestamp).format('HH:mm')}</div>\r\n                                    </div>\r\n                                    <div className={message.author === auth.currentUser.uid ? 'message-text-container' : 'message-text-container2'}>\r\n                                        <div className={message.author === auth.currentUser.uid ? 'message-text' : 'message-text2'}>\r\n                                            {message.content}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </>\r\n                )\r\n                setMessages(messageDisplay);\r\n                if(messageContainer){\r\n                    messageContainer.scrollTop = messageContainer.scrollHeight;\r\n                }\r\n            });\r\n    }\r\n\r\n    // const handleLoadMessages = async (uid) => {\r\n    //     let userToMessage = uid\r\n    //     setUserToMessage(userToMessage);\r\n    //     const convoRef = db.collection('conversations').doc([auth.currentUser.uid, userToMessage].sort().join('|')).collection('messages');\r\n    //     const messagesRef = await convoRef.get();\r\n    //     let messages = []\r\n    //     messagesRef.forEach(message => {\r\n    //         messages.push(message.data());\r\n    //     })\r\n    //     messages.sort((a, b) => {\r\n    //         return a.timestamp - b.timestamp;\r\n    //     });\r\n\r\n    //     const messageDisplay = (\r\n    //         <div className=\"main-chat\">\r\n    //             <div className=\"chat-title\">\r\n    //                 <div className=\"chat-title-name\">{userToMessage}</div>\r\n    //             </div>\r\n    //             {messages.map(message => (\r\n    //                 <div className={message.author === auth.currentUser.uid ? 'message-one' : 'message-two'}>\r\n    //                     <div className={message.author === auth.currentUser.uid ? 'chat-name-picture' : 'chat-name-picture2'}>\r\n    //                         <div className=\"chat-name\">{message.author === auth.currentUser.uid ? 'You' : userToMessage}</div>\r\n    //                         <div className=\"chat-timestamp\">{moment(message.timestamp).format('HH:mm')}</div>\r\n    //                     </div>\r\n    //                     <div className={message.author === auth.currentUser.uid ? 'message-text-container' : 'message-text-container2'}>\r\n    //                         <div className={message.author === auth.currentUser.uid ? 'message-text' : 'message-text2'}>\r\n    //                             {message.content}\r\n    //                         </div>\r\n    //                     </div>\r\n    //                 </div>\r\n    //             ))}\r\n    //         </div>\r\n    //     )\r\n    //     setMessages(messageDisplay);\r\n    // }\r\n\r\n    if (loading) {\r\n        getConversations().then(success => {\r\n            if (success) {\r\n                setLoading(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    const onChangeHandler = (event) => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === \"msgcontent\") {\r\n            setMsgContent(value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"tutors-container\">\r\n            <div className=\"chat-container\">\r\n                {messages ? messages : ''}\r\n                <div className=\"chat-typing\">\r\n                    <input type=\"text\" className=\"chat-input\" name=\"msgcontent\" value={msgcontent} onChange={(event) => onChangeHandler(event)} />\r\n                    <div className=\"class-buttons-container\">\r\n                        <div className=\"chat-attachments\">\r\n                            <i className=\"fas fa-paper-plane input-send\" onClick={(event) => { handleSendMessage(event) }}></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"tutors-details-container-main\">\r\n\r\n                <div className=\"chat-list\">\r\n                    {chatsMap ? chatsMap : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TextChat;","/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Payment/MakePayment.js",[],"/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Payment/StripeContainer.js",[],"/mnt/c/Users/choco/Desktop/ip3-git/front-end/src/Components/Payment/PaymentForm.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":8,"column":10,"nodeType":"123","messageId":"124","endLine":8,"endColumn":15},{"ruleId":"117","replacedBy":"125"},{"ruleId":"119","replacedBy":"126"},{"ruleId":"121","severity":1,"message":"127","line":11,"column":12,"nodeType":"123","messageId":"124","endLine":11,"endColumn":29},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar",["128"],["129"],"'conversationNames' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]