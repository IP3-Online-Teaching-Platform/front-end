{"ast":null,"code":"var _jsxFileName = \"/Users/johnmcleodbrown/Desktop/IP3frontend/front-end/client/src/Components/Login/PasswordReset.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { auth } from '../Auth/Firebase-Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordReset = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\n  const [error, setError] = useState(null);\n\n  const onChangeHandler = event => {\n    const {\n      name,\n      value\n    } = event.currentTarget;\n\n    if (name === \"userEmail\") {\n      setEmail(value);\n    }\n  };\n\n  const sendResetEmail = event => {\n    event.preventDefault();\n    auth.sendPasswordResetEmail(email).then(() => {\n      setEmailHasBeenSent(true);\n      setTimeout(() => {\n        setEmailHasBeenSent(false);\n      }, 3000);\n    }).catch(() => {\n      setError(\"Error resetting password\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [emailHasBeenSent && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"An email has been sent to you!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), error !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userEmail\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"userEmail\",\n          id: \"userEmail\",\n          value: email,\n          placeholder: \"Input your email\",\n          onChange: onChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => {\n            sendResetEmail(event, email);\n          },\n          children: \"Send me a reset link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"\\u2190 back to sign in page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PasswordReset, \"8vtz19arTtVSs6ewSF5j0R6X2JA=\");\n\n_c = PasswordReset;\nexport default PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["/Users/johnmcleodbrown/Desktop/IP3frontend/front-end/client/src/Components/Login/PasswordReset.js"],"names":["React","useState","Link","auth","PasswordReset","email","setEmail","emailHasBeenSent","setEmailHasBeenSent","error","setError","onChangeHandler","event","name","value","currentTarget","sendResetEmail","preventDefault","sendPasswordResetEmail","then","setTimeout","catch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,QAAqB,uBAArB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMU,eAAe,GAAGC,KAAK,IAAI;AAC/B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,aAA9B;;AACA,QAAIF,IAAI,KAAK,WAAb,EAA0B;AACxBP,MAAAA,QAAQ,CAACQ,KAAD,CAAR;AACD;AACF,GALD;;AAOA,QAAME,cAAc,GAAGJ,KAAK,IAAI;AAC9BA,IAAAA,KAAK,CAACK,cAAN;AACAd,IAAAA,IAAI,CACDe,sBADH,CAC0Bb,KAD1B,EAEGc,IAFH,CAEQ,MAAM;AACVX,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAY,MAAAA,UAAU,CAAC,MAAM;AAAEZ,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AAA4B,OAArC,EAAuC,IAAvC,CAAV;AACD,KALH,EAMGa,KANH,CAMS,MAAM;AACXX,MAAAA,QAAQ,CAAC,0BAAD,CAAR;AACD,KARH;AASD,GAXD;;AAaA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE;AAAM,QAAA,MAAM,EAAC,EAAb;AAAA,mBACGH,gBAAgB,iBACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAMGE,KAAK,KAAK,IAAV,iBACC;AAAA,oBACGA;AADH;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAWE;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAcE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,WAFP;AAGE,UAAA,EAAE,EAAC,WAHL;AAIE,UAAA,KAAK,EAAEJ,KAJT;AAKE,UAAA,WAAW,EAAC,kBALd;AAME,UAAA,QAAQ,EAAEM;AANZ;AAAA;AAAA;AAAA;AAAA,gBAdF,eAuBE;AAAQ,UAAA,OAAO,EAAEC,KAAK,IAAI;AACxBI,YAAAA,cAAc,CAACJ,KAAD,EAAQP,KAAR,CAAd;AACD,WAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiCE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,CAtED;;GAAMD,a;;KAAAA,a;AAuEN,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { auth } from '../Auth/Firebase-Auth'\n\nconst PasswordReset = () => {\n  const [email, setEmail] = useState(\"\");\n  const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\n  const [error, setError] = useState(null);\n\n  const onChangeHandler = event => {\n    const { name, value } = event.currentTarget;\n    if (name === \"userEmail\") {\n      setEmail(value);\n    }\n  };\n\n  const sendResetEmail = event => {\n    event.preventDefault();\n    auth\n      .sendPasswordResetEmail(email)\n      .then(() => {\n        setEmailHasBeenSent(true);\n        setTimeout(() => { setEmailHasBeenSent(false) }, 3000);\n      })\n      .catch(() => {\n        setError(\"Error resetting password\");\n      });\n  };\n\n  return (\n    <div>\n      <h1>\n        Reset your Password\n      </h1>\n      <div>\n        <form action=\"\">\n          {emailHasBeenSent && (\n            <div>\n              An email has been sent to you!\n            </div>\n          )}\n          {error !== null && (\n            <div>\n              {error}\n            </div>\n          )}\n          <label htmlFor=\"userEmail\">\n            Email:\n          </label>\n          <input\n            type=\"email\"\n            name=\"userEmail\"\n            id=\"userEmail\"\n            value={email}\n            placeholder=\"Input your email\"\n            onChange={onChangeHandler}\n          />\n\n          <button onClick={event => {\n            sendResetEmail(event, email);\n          }}\n          >\n            Send me a reset link\n          </button>\n\n        </form>\n\n        <Link to=\"/login\">\n          &larr; back to sign in page\n        </Link>\n\n      </div>\n    </div>\n  );\n};\nexport default PasswordReset;"]},"metadata":{},"sourceType":"module"}